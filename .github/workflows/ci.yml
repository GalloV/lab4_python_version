name: Python CI Pipeline

on:
  push:
    branches: [ main ]  
  pull_request:
    branches: [ main ]  

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest  
    
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip  
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      
      - name: Run Pylint
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          pylint src/ tests/

  test:
    name: Test (Python ${{ matrix.python-version }} on ${{ matrix.os }})
    needs: lint  
    
    strategy:
      matrix:
        python-version: ['3.9', '3.11']  
        os: [ubuntu-latest, windows-latest]  
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt
      
      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=src --cov-report=xml --cov-report=html --cov-report=term
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            htmlcov/
            coverage.xml
          retention-days: 30

  build:
    name: Build Distribution
    needs: test  
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-build-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-build-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create distribution
        run: |
          mkdir -p dist
          cp -r src/* dist/
          echo "Build completed at $(date)" > dist/BUILD_INFO.txt
          echo "Git commit: ${{ github.sha }}" >> dist/BUILD_INFO.txt
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-distribution
          path: dist/
          retention-days: 90
      
      - name: Build summary
        run: |
          echo "## Build Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Python Version**: 3.11" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Files**: $(ls -1 dist/ | wc -l) files built" >> $GITHUB_STEP_SUMMARY